{"version":3,"sources":["components/Header.js","components/FavoritesList.js","components/FilterInput.js","components/FilterGenre.js","components/Filters.js","components/PlayList.js","components/PlayInfo.js","components/PlayControl.js","components/PlayDetails.js","components/PlayBrowser.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","document","querySelector","Header","props","React","useState","modalIsOpen","setIsOpen","closeModal","id","to","onClick","closeCurrent","isOpen","onRequestClose","style","title","href","className","FavoritesList","getFavFunctions","getFavList","map","p","e","setCurrent","removeFromFavs","FilterInput","defaultValue","onChange","filterPlays","type","target","value","FilterGenre","default","Filters","clearFilter","PlayList","sortPlays","plays","likelyDate","favFuncs","isFav","addToFavs","length","PlayInfo","current","synopsis","PlayControl","setAct","data","acts","a","index","name","setScene","act","scenes","s","setCharacter","selected","persona","player","PlayDetails","state","mode","has_more","loading","scene","character","seach_word","setMode","bind","setSearchWord","highlight","this","filename","setState","localStorage","getItem","JSON","parse","fetch","response","json","setItem","stringify","console","error","new_mode","num","str","current_mode","createButtonBar","class","genre","wiki","rel","gutenberg","shakespeareOrg","desc","stageDirection","speeches","speaker","lines","l","Component","PlayBrowser","single_view","Home","src","alt","App","favs","filtered_plays","title_filter","date_start_filter","date_end_filter","genre_filter","filterAll","play","key","new_filtered_plays","filter","toUpperCase","includes","Number","exclude","plays_init","new_plays","verify","filter_value","conditional","sort","b","new_favs","push","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6604d6ba.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Modal from 'react-modal';\n\nimport \"./Header.css\"\nimport \"../App.css\"\n\n// source: https://www.npmjs.com/package/react-modal\nconst customStyles = {\n    content: {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)',\n    },\n  };\n\nModal.setAppElement(document.querySelector(\"#body\"));\n\nconst Header = (props) => {\n    const [modalIsOpen, setIsOpen] = React.useState(false);\n\n    function openModal() {\n        setIsOpen(true);\n    }\n\n    function closeModal() {\n        setIsOpen(false);\n    }\n\n    return (\n        <div id=\"header\">\n            <Link to=\"/comp4513-a1/\" id=\"logo\" onClick={props.closeCurrent}>&#127917;</Link>\n            <button onClick={openModal}>About</button>\n            <Modal\n                isOpen={modalIsOpen}\n                onRequestClose={closeModal}\n                style={customStyles}\n            >\n                <h2>Shakespeare Play Browser</h2>\n                <h3>Assignment Information</h3>\n                <table>\n                    <tbody>\n                        <tr>\n                            <td title=\"name\">Olga Koldachenko</td>\n                            <td><a title=\"contact\" href=\"mailto:okold525@mtroyal.ca\">okold525@mtroyal.ca</a></td>\n                        </tr>\n                        <tr>\n                            <td title=\"university\">Mount Royal University</td>\n                            <td title=\"professor\">Randy Connolly</td>\n                        </tr>\n                        <tr>\n                            <td title=\"course\">COMP 4513 - Web III</td>\n                            <td title=\"semester\">Fall 2021</td>\n                        </tr>        \n                    </tbody>\n                </table>\n                <h3>Resources & References</h3>\n                <div className=\"columns\">\n                    <p><a href=\"https://reactjs.org/\">react</a></p><p>framework</p>\n                    <p><a href=\"https://www.npmjs.com/package/react-modal\">react-modal</a></p><p>modal dialog</p>\n                    <p><a href=\"https://www.npmjs.com/package/react-router-dom\">react-router-dom</a></p><p>routing</p>\n                    <p><a href=\"https://unsplash.com/photos/nz-UtZz81fI\">unsplash</a></p><p>home view splash image</p>\n                    <p><a href=\"https://icons8.com/preloaders/en/circular\">preloaders.net</a></p><p>spinner gif</p>\n                </div>\n                <p>All the symbols are unicode this time around</p>\n                <button id=\"modal-button\" onClick={closeModal}>Close</button>\n            </Modal>\n        </div>\n    );\n}\n\nexport default Header;","const FavoritesList = (props) => {\n    return (\n        <div id=\"fav-list\">\n            <h2>Favourites</h2>\n            <table>\n                <thead>\n                    <tr>\n                        <td>Title</td>\n                        <td className=\"thin-col\">Del</td>\n                    </tr>\n                </thead>\n                <tbody>\n                    { props.getFavFunctions().getFavList().map(p => { return <tr>\n                        <td onClick={e => props.setCurrent(p)}>{p.title}</td>\n                        <td className=\"thin-col\" onClick={e => props.getFavFunctions().removeFromFavs(p)}>X</td>\n                        </tr>\n                    })}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default FavoritesList;","const FilterInput = (props) => {\n    return  <input defaultValue={props.title} onChange={e => props.filterPlays(props.type, e.target.value)}></input>;\n}\n\nexport default FilterInput;","// todo: not harde code this\nconst FilterGenre = (props) => {\n    return ( <select onChange={e => props.filterPlays(\"genre\", e.target.value)}>\n        <option default></option>\n        <option value=\"comedy\">Comedy</option>\n        <option value=\"tragedy\">Tragedy</option>\n        <option value=\"history\">History</option>\n    </select>\n    );\n}\n\nexport default FilterGenre;","import FilterInput from './FilterInput';\nimport FilterGenre from './FilterGenre';\nimport \"./Filters.css\"\n\n\nconst Filters = (props) => {\n    return (\n        <div id=\"filter-block\">\n            <h2>Filters</h2>\n            <form id=\"filter-form\">\n                <h3>Title</h3>\n                <FilterInput type=\"title\" title={props.title} filterPlays={props.filterPlays}/>\n                <h3>Year</h3>\n                <label>Start</label>\n                <FilterInput type=\"start\" filterPlays={props.filterPlays}/>\n                <label>End</label>\n                <FilterInput type=\"end\" filterPlays={props.filterPlays}/>\n                <h3>Genre</h3>\n                <FilterGenre filterPlays={props.filterPlays}/>\n                <button type=\"reset\" onClick={props.clearFilter}>Clear Filters</button>\n            </form>\n        </div>\n    );\n}\n\nexport default Filters;","const PlayList = (props) => {\n    return (\n        <div className=\"scrollable\">\n        <h2>Play List</h2>\n            <table id=\"play-data\">\n                <thead>\n                    <tr>\n                        <td onClick={e => props.sortPlays(\"title\")}>Title</td>\n                        <td onClick={e => props.sortPlays(\"likelyDate\")}>Year</td>\n                        <td className=\"thin-col\">Fav</td>\n                        <td className=\"thin-col\">View</td>\n                    </tr>\n                </thead>\n                <tbody>\n                    { props.plays.map(p => {\n                        return (\n                        <tr key={p.id}>\n                            <td onClick={e => props.setCurrent(p)}>{p.title}</td>\n                            <td className=\"thin-col\">{p.likelyDate}</td>\n                            {props.favFuncs.isFav(p) && \n                                <td className=\"thin-col\" onClick={e => props.favFuncs.removeFromFavs(p)}>&#128420;</td>\n                            }\n                            {!props.favFuncs.isFav(p) &&\n                                <td className=\"thin-col\" onClick={e => props.favFuncs.addToFavs(p)}>&#9825;</td>\n                            }\n                            <td className=\"thin-col\">View</td>\n                        </tr>)} ) }\n                </tbody>\n            </table>\n            {props.plays.length === 0 &&\n                        <p>No matches found!</p>\n                    }\n        </div>\n    );\n}\n\nexport default PlayList;","import './PlayInfo.css'\n\nconst PlayInfo = (props) => {\n    return (\n        <div>\n            <h2>{props.current.title}</h2>\n            <h3>Synopsis</h3>\n            <p>{props.current.synopsis}</p>\n            <div id=\"play-controls\"> \n                {props.favFuncs.isFav(props.current) && \n                    <div className=\"fav-button\" onClick={e => props.favFuncs.removeFromFavs(props.current)}>&#128420;</div>\n                                }\n                {!props.favFuncs.isFav(props.current) &&\n                    <div className=\"fav-button\" onClick={e => props.favFuncs.addToFavs(props.current)}>&#9825;</div>\n                                }\n                <button onClick={props.closeCurrent}>Close</button>\n            </div>\n            \n        </div>\n    );\n}\n\nexport default PlayInfo;","import React from \"react\";\n\nconst PlayControl = (props) => {\n    return (\n        <div>\n            <label>Act</label>\n            <select onChange={e => props.setAct(e.target.value)}>\n                {props.data.acts.map((a, index) => <option value={index}>{a.name}</option>)}\n            </select>\n            <label>Scene</label>\n            <select onChange={e => props.setScene(e.target.value)}>\n                {props.act !== null &&\n                    props.data.acts[props.act].scenes.map((s, index) => <option value={index}>{s.name}</option>)}\n            </select>\n            <label>Character</label>\n            <select onChange={e => props.setCharacter(e.target.value)}>\n                <option value=\"\" selected></option>\n                {props.data.persona.map((p, index) => <option value={p.player}>{p.player}</option>)}\n            </select>\n        </div>\n    )\n    \n}\n\nexport default PlayControl;","import React from 'react';\nimport PlayControl from './PlayControl';\n\nimport './PlayDetails.css'\n\nclass PlayDetails extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mode: \"details\",\n            has_more: \"false\",\n            loading: \"false\",\n            data: {},\n            act: 0, \n            scene: 0,\n            character: \"\",\n            seach_word: \"\"\n        }\n\n        this.setMode=this.setMode.bind(this);\n        this.setAct=this.setAct.bind(this);\n        this.setScene=this.setScene.bind(this);\n        this.setCharacter=this.setCharacter.bind(this);\n        this.setSearchWord=this.setSearchWord.bind(this);\n        this.highlight=this.highlight.bind(this);\n    }\n\n    async componentDidMount() {\n        if (this.props.current.filename !== \"\") {\n            this.setState({loading: true})\n            try {\n                let data = localStorage.getItem(this.props.current.id);\n                if (data) {\n                  data = JSON.parse(data);\n                }\n                else {\n                  const response = await fetch(\"https://www.randyconnolly.com//funwebdev/3rd/api/shakespeare/play.php?name=\" + this.props.current.id);\n                  data = await response.json();\n                  localStorage.setItem(this.props.current.id, JSON.stringify(data));\n                }\n                this.setState({has_more: true, data: data, loading: false});\n              }\n              catch {\n                console.error(\"Failed to load play information\");\n                this.setState({loading: false});\n              }\n        }\n        \n    }\n\n    setMode(new_mode) {\n        this.setState({mode: new_mode});\n    }\n\n    setAct(num) {\n        this.setState({act: num, scene: 0, character: \"\"});\n    }\n\n    setScene(num) {\n        this.setState({scene: num, character: \"\"})\n    }\n\n    setCharacter(name) {\n        this.setState({character: name})\n    }\n\n    setSearchWord(str) {\n        this.setState({seach_word: str})\n    }\n\n    // dummy function... not enough time to finish it\n    highlight(str) {\n        return str;\n    }\n\n    createButtonBar(current_mode) {\n        return (\n            <div>\n                {current_mode === \"details\" &&\n                    <button className=\"current-mode\">Details</button>\n                }\n                {current_mode !== \"details\" &&\n                    <button onClick={e => this.setMode(\"details\")}>Details</button>\n                }\n                {this.state.has_more === true && current_mode === \"characters\" &&\n                    <button className=\"current-mode\">Characters</button>\n                }\n                {this.state.has_more === true && current_mode !== \"characters\" &&\n                    <button onClick={e => this.setMode(\"characters\")}>Characters</button>\n                }\n                {this.state.has_more === true && current_mode === \"text\" &&\n                    <button className=\"current-mode\">Text</button>\n                }\n                {this.state.has_more === true && current_mode !== \"text\" &&\n                    <button onClick={e => this.setMode(\"text\")}>Text</button>\n                }\n                {this.state.loading === true &&\n                    <span>Loading more play info...</span>\n                }\n            </div>\n        );\n    }\n\n    render() {\n        if (this.state.mode === \"details\") {\n            return (\n                <div className=\"scrollable\">\n                    {this.createButtonBar(\"details\")}\n                    <h2>Play Details</h2>\n                    <div class=\"details\">\n                        <p>Likely Date:</p>\n                        <p>{this.props.current.likelyDate}</p>\n                        <p>Genre:</p>\n                        <p>{this.props.current.genre}</p>\n                        <p>Link:</p>\n                        <a href={this.props.current.wiki} target=\"_blank\" rel=\"noreferrer\">Wiki</a>\n                        <p>Link:</p>\n                        <a href={this.props.current.gutenberg} target=\"_blank\" rel=\"noreferrer\">Gutenberg</a>\n                        <p>Link:</p>\n                        <a href={this.props.current.shakespeareOrg} target=\"_blank\" rel=\"noreferrer\">Shakespeare.org</a>\n                        <p>Description:</p>\n                        <p>{this.props.current.desc}</p>\n                    </div>\n                </div>\n            )\n        }\n        if (this.state.mode === \"characters\") {\n            return (\n                <div className=\"scrollable\">\n                    {this.createButtonBar(\"characters\")}\n                    <h2>Characters</h2>\n                    <ul>\n                        {this.state.data.persona.map(p => <li><strong>{p.player},</strong>{p.desc}</li>)}\n                    </ul>\n                </div>\n            )\n        }\n        // i know this is horrible but it's 10pm and it works?\n        if (this.state.mode === \"text\") {\n            return (\n                <div className=\"scrollable\">\n                    {this.createButtonBar(\"text\")}\n                    <PlayControl \n                        data={this.state.data} \n                        act={this.state.act} \n                        scene={this.state.scene}\n                        setAct={this.setAct} \n                        setScene={this.setScene} \n                        setCharacter={this.setCharacter}\n                        setSearchWord={this.setSearchWord}    \n                        />\n                    <h2 className=\"serif\">{this.state.data.title}</h2>\n                    <h3 className=\"serif\">{this.state.data.acts[this.state.act].name}</h3>\n                    <h4 className=\"serif\">{this.state.data.acts[this.state.act].scenes[this.state.scene].name}</h4>\n                    <p className=\"serif\">{this.state.data.acts[this.state.act].scenes[this.state.scene].title}</p>\n                    <p className=\"serif\">{this.state.data.acts[this.state.act].scenes[this.state.scene].stageDirection}</p>\n                    {this.state.data.acts[this.state.act].scenes[this.state.scene].speeches.map(s => {\n                        if (this.state.character === \"\" || this.state.character === s.speaker) {\n                            return (\n                            <div className=\"speech\">\n                                <p className=\"serif\"><strong>{s.speaker}</strong></p>\n                                {s.lines.map(l => <p className=\"serif\">{this.highlight(l)}</p>)}\n                            </div>\n                        )}\n                        else return null})}\n                </div>\n            )\n        }\n        return <div><p>Invalid mode... You shouldn't be seeing this??</p></div>\n    }\n}\n\nexport default PlayDetails;","import Header from \"./Header\";\nimport FavoritesList from \"./FavoritesList\"\nimport Filters from \"./Filters\"\nimport PlayList from \"./PlayList\"\nimport PlayInfo from \"./PlayInfo\";\nimport PlayDetails from \"./PlayDetails\";\n\nimport \"./PlayBrowser.css\"\n\nconst PlayBrowser = (props) => {\n    return (\n        <div id=\"play-browser\">\n            <Header closeCurrent={props.closeCurrent}/>\n            <FavoritesList getFavFunctions={props.getFavFunctions} setCurrent={props.setCurrent}/>\n            {!props.single_view &&\n                <Filters title={props.title} filterPlays={props.filterPlays} clearFilter={props.clearFilter}/>\n            }\n            {!props.single_view &&\n                <PlayList favFuncs={props.getFavFunctions()} plays={props.plays} sortPlays={props.sortPlays} setCurrent={props.setCurrent}/>\n            }\n            {props.single_view &&\n                <PlayInfo current={props.current} closeCurrent={props.closeCurrent} favFuncs={props.getFavFunctions()}/>\n            }\n            {props.single_view &&\n                <PlayDetails current={props.current}/>\n            }\n            \n        </div>\n    );\n}\n\nexport default PlayBrowser;","import { Link } from 'react-router-dom';\nimport FilterInput from './FilterInput';\nimport \"./Home.css\"\n\n\nconst Home = (props) => {\n\n    return (\n        <div id=\"fill\">\n            <div id=\"home-box\">\n                <h2>Play Browser</h2>\n                {props.loading && // https://reactjs.org/docs/conditional-rendering.html\n                    <img src=\"spinner.gif\" alt=\"loading\"/>\n                }\n                {!props.loading &&\n                    <form>\n                        <label>Title</label>\n                        <FilterInput title={props.title} type=\"title\" filterPlays={props.filterPlays}/>\n                        <Link to=\"/comp4513-a1/browse\" className=\"link-btn\">Search Plays</Link>\n                        <Link to=\"/comp4513-a1/browse\" className=\"link-btn\" onClick={props.clearFilter}>View All</Link>\n                    </form>\n                }\n            </div>\n        </div>\n        );\n}\n\nexport default Home;","import { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport PlayBrowser from './components/PlayBrowser.js';\nimport Home from './components/Home.js';\n\nimport './App.css';\nimport React from 'react';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      plays: [],\n      current: null,\n      single_view: false,\n\n      loading: true, \n      favs: [], \n      filtered_plays: [],\n      title_filter: null,\n      date_start_filter: null,\n      date_end_filter: null,\n      genre_filter: null,\n    };\n\n    this.setCurrent=this.setCurrent.bind(this);\n    this.closeCurrent=this.closeCurrent.bind(this);\n    this.sortPlays=this.sortPlays.bind(this);\n\n    this.filterPlays=this.filterPlays.bind(this);\n    this.filterAll=this.filterAll.bind(this);\n    this.clearFilter=this.clearFilter.bind(this);\n\n    this.addToFavs=this.addToFavs.bind(this);\n    this.getFavList=this.getFavList.bind(this);\n    this.isFav=this.isFav.bind(this);\n    this.removeFromFavs=this.removeFromFavs.bind(this);\n    this.getFavFunctions=this.getFavFunctions.bind(this);\n  }\n\n  setCurrent(play) {\n    this.setState({current: play, single_view: true});\n  }\n\n  closeCurrent() {\n    this.setState({single_view: false});\n  }\n\n  // PLAY LIST & FILTER FUNCTIONS\n\n  filterPlays(key, value) {\n\n    let new_filtered_plays = [...this.state.plays];\n\n    if (key === \"title\") {\n      this.setState({title_filter: value})\n      new_filtered_plays = new_filtered_plays.filter(p => p.title.toUpperCase().includes(value.toUpperCase()));\n      new_filtered_plays = this.filterAll(\"title\", new_filtered_plays);\n    }\n\n    if (key === \"start\" && Number(value)) {\n      this.setState({date_start_filter: Number(value)})\n      \n      new_filtered_plays = new_filtered_plays.filter(p => p.likelyDate >= Number(value));\n      new_filtered_plays = this.filterAll(\"start\", new_filtered_plays);\n    }\n\n    if (key === \"end\" && Number(value)) {\n      this.setState({date_end_filter: Number(value)})\n      \n      new_filtered_plays = new_filtered_plays.filter(p => p.likelyDate <= Number(value));\n      new_filtered_plays = this.filterAll(\"end\", new_filtered_plays);\n    }\n\n    if (key === \"genre\") {\n      this.setState({genre_filter: value})\n      new_filtered_plays = new_filtered_plays.filter(p => p.genre.toUpperCase().includes(value.toUpperCase()));\n      new_filtered_plays = this.filterAll(\"genre\", new_filtered_plays);\n    }\n    \n    this.setState({filtered_plays: new_filtered_plays})\n  }\n\n  // filters all according to the state, except for the excluded key\n  // this gets around a bug where filtering everything at once based on state would\n  // make the filter lag behind by one step...\n  filterAll(exclude, plays_init) {\n    let new_plays = [...plays_init]\n\n\tlet verify = (key, filter_value, conditional) => exclude !== key && filter_value && conditional;\n\n    if (verify(\"title\", this.state.title_filter, (this.state.title_filter !== \"\"))) {\n      new_plays = new_plays.filter(p => p.title.toUpperCase().includes(this.state.title_filter.toUpperCase()));\n    }\n\n    if (verify(\"start\", this.state.date_start_filter, Number(this.state.date_start_filter))) {\n      new_plays = new_plays.filter(p => p.likelyDate >= this.state.date_start_filter);\n    }\n\n    if (verify(\"end\", this.state.date_end_filter, Number(this.state.date_end_filter))) {\n      new_plays = new_plays.filter(p => p.likelyDate <= this.state.date_end_filter);\n    }\n\n    if (verify(\"genre\", this.state.genre_filter, (this.state.genre_filter !== \"\"))) {\n      new_plays = new_plays.filter(p => p.genre.toUpperCase().includes(this.state.genre_filter.toUpperCase()));\n    }\n\n    return new_plays;\n  }\n\n  // works with the year, not with the title. no idea why\n  sortPlays(key) {\n    let new_plays = [...this.state.plays];\n    \n    new_plays.sort((a, b) => a[key] - b[key]);\n    let new_filtered_plays = this.filterAll(\"\", new_plays);\n    this.setState({plays: new_plays, filtered_plays: new_filtered_plays});\n  }\n\n  clearFilter() {\n    let new_filtered_plays = [...this.state.plays];\n\n    this.setState({\n      filtered_plays: new_filtered_plays,\n      title_filter: null,\n      date_start_filter: null,\n      date_end_filter: null,\n      genre_filter: null});\n  }\n\n  // FAVOURITES FUNCTIONS\n  getFavList() {\n    return this.state.favs;\n  }\n\n  isFav(play) {\n    return this.state.favs.includes(play);\n  }\n  \n  addToFavs(play) {\n      if (!this.isFav(play)) {\n      let new_favs = [...this.state.favs];\n      new_favs.push(play); \n      this.setState({favs: new_favs});\n    }\n  }\n\n  removeFromFavs(play) {\n    if (this.isFav(play)) {\n      let new_favs = [...this.state.favs];\n      new_favs = new_favs.filter(p => p.id !== play.id); \n      this.setState({favs: new_favs});\n    }\n  }\n\n  getFavFunctions() {\n    return { \n      addToFavs: this.addToFavs, \n      getFavList: this.getFavList, \n      isFav: this.isFav,\n      removeFromFavs: this.removeFromFavs }\n  }\n\n  async componentDidMount() {\n    try {\n      let data = localStorage.getItem(\"shakespeare_data\");\n      if (data) {\n        data = JSON.parse(data);\n      }\n      else {\n        const response = await fetch(\"https://www.randyconnolly.com//funwebdev/3rd/api/shakespeare/list.php\");\n        data = await response.json();\n        data.sort((a, b) => b.title - a.title);\n        localStorage.setItem(\"shakespeare_data\", JSON.stringify(data));\n      }\n      this.setState({plays: data});\n      let new_filtered_plays = [...data];\n      this.setState({filtered_plays: new_filtered_plays})\n      this.setState({loading: false});\n    }\n    catch {\n      console.error(\"Oh God\");\n    }\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/comp4513-a1\" element={\n            <Home loading={this.state.loading} \n              filterPlays={this.filterPlays} \n              clearFilter={this.clearFilter} \n              title={this.state.title_filter}/>}/>\n          <Route path=\"/comp4513-a1/browse\" element={\n            <PlayBrowser plays={this.state.filtered_plays} \n              getFavFunctions={this.getFavFunctions} \n              filterPlays={this.filterPlays} \n              clearFilter={this.clearFilter} \n              title={this.state.title_filter}\n              sortPlays={this.sortPlays}\n              setCurrent={this.setCurrent}\n              closeCurrent={this.closeCurrent}\n              single_view={this.state.single_view}\n              current={this.state.current}\n              />}/>\n        </Routes>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}