{"version":3,"sources":["components/Header.js","components/FavoritesList.js","components/FilterInput.js","components/FilterGenre.js","components/Filters.js","components/PlayList.js","components/PlayBrowser.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","document","querySelector","Header","props","React","useState","modalIsOpen","setIsOpen","closeModal","id","to","onClick","isOpen","onRequestClose","style","title","href","className","FavoritesList","getFavFunctions","getFavList","map","p","e","removeFromFavs","FilterInput","defaultValue","onChange","filterPlays","type","target","value","FilterGenre","default","Filters","clearFilter","PlayList","plays","likelyDate","favFuncs","isFav","addToFavs","length","PlayBrowser","Home","loading","src","alt","App","state","favs","filtered_plays","title_filter","date_start_filter","date_end_filter","genre_filter","bind","filterAll","key","new_filtered_plays","this","setState","filter","toUpperCase","includes","Number","genre","exclude","plays_init","new_plays","verify","filter_value","conditional","play","new_favs","push","a","data","localStorage","getItem","JSON","parse","fetch","response","json","sort","b","setItem","stringify","console","error","path","element","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0eaad615.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Modal from 'react-modal';\n\nimport \"./Header.css\"\nimport \"../App.css\"\n\n// source: https://www.npmjs.com/package/react-modal\nconst customStyles = {\n    content: {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)',\n    },\n  };\n\nModal.setAppElement(document.querySelector(\"#body\"));\n\nconst Header = (props) => {\n    const [modalIsOpen, setIsOpen] = React.useState(false);\n\n    function openModal() {\n        setIsOpen(true);\n    }\n\n    function closeModal() {\n        setIsOpen(false);\n    }\n\n    return (\n        <div id=\"header\">\n            <Link to=\"/comp4513-a1/\" id=\"logo\">&#127917;</Link>\n            <button onClick={openModal}>About</button>\n            <Modal\n                isOpen={modalIsOpen}\n                onRequestClose={closeModal}\n                style={customStyles}\n            >\n                <h2>Shakespeare Play Browser</h2>\n                <h3>Assignment Information</h3>\n                <table>\n                    <tbody>\n                        <tr>\n                            <td title=\"name\">Olga Koldachenko</td>\n                            <td><a title=\"contact\" href=\"mailto:okold525@mtroyal.ca\">okold525@mtroyal.ca</a></td>\n                        </tr>\n                        <tr>\n                            <td title=\"university\">Mount Royal University</td>\n                            <td title=\"professor\">Randy Connolly</td>\n                        </tr>\n                        <tr>\n                            <td title=\"course\">COMP 4513 - Web III</td>\n                            <td title=\"semester\">Fall 2021</td>\n                        </tr>        \n                    </tbody>\n                </table>\n                <h3>Resources & References</h3>\n                <div className=\"columns\">\n                    <p><a href=\"https://reactjs.org/\">react</a></p><p>framework</p>\n                    <p><a href=\"https://www.npmjs.com/package/react-modal\">react-modal</a></p><p>modal dialog</p>\n                    <p><a href=\"https://www.npmjs.com/package/react-router-dom\">react-router-dom</a></p><p>routing</p>\n                    <p><a href=\"https://unsplash.com/photos/nz-UtZz81fI\">unsplash</a></p><p>home view splash image</p>\n                    <p><a href=\"https://icons8.com/preloaders/en/circular\">preloaders.net</a></p><p>spinner gif</p>\n                </div>\n                <button id=\"modal-button\" onClick={closeModal}>Close</button>\n            </Modal>\n        </div>\n    );\n}\n\nexport default Header;","const FavoritesList = (props) => {\n    return (\n        <div id=\"fav-list\">\n            <h2>Favourites</h2>\n            <table>\n                <thead>\n                    <tr>\n                        <td>Title</td>\n                        <td className=\"thin-col\">Del</td>\n                    </tr>\n                </thead>\n                <tbody>\n                    { props.getFavFunctions().getFavList().map(p => { return <tr>\n                        <td>{p.title}</td>\n                        <td className=\"thin-col\" onClick={e => props.getFavFunctions().removeFromFavs(p)}>X</td>\n                        </tr>\n                    })}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default FavoritesList;","const FilterInput = (props) => {\n    return  <input defaultValue={props.title} onChange={e => props.filterPlays(props.type, e.target.value)}></input>;\n}\n\nexport default FilterInput;","// todo: not harde code this\nconst FilterGenre = (props) => {\n    return ( <select onChange={e => props.filterPlays(\"genre\", e.target.value)}>\n        <option default></option>\n        <option value=\"comedy\">Comedy</option>\n        <option value=\"tragedy\">Tragedy</option>\n        <option value=\"history\">History</option>\n    </select>\n    );\n}\n\nexport default FilterGenre;","import FilterInput from './FilterInput';\nimport FilterGenre from './FilterGenre';\nimport \"./Filters.css\"\n\n\nconst Filters = (props) => {\n    return (\n        <div id=\"filter-block\">\n            <h2>Filters</h2>\n            <form id=\"filter-form\">\n                <h3>Title</h3>\n                <FilterInput type=\"title\" title={props.title} filterPlays={props.filterPlays}/>\n                <h3>Year</h3>\n                <label>Start</label>\n                <FilterInput type=\"start\" filterPlays={props.filterPlays}/>\n                <label>End</label>\n                <FilterInput type=\"end\" filterPlays={props.filterPlays}/>\n                <h3>Genre</h3>\n                <FilterGenre filterPlays={props.filterPlays}/>\n                <button type=\"reset\" onClick={props.clearFilter}>Clear Filters</button>\n            </form>\n        </div>\n    );\n}\n\nexport default Filters;","import \"./PlayList.css\"\n\nconst PlayList = (props) => {\n    return (\n        <div id=\"play-list\">\n        <h2>Play List</h2>\n            <table id=\"play-data\">\n                <thead>\n                    <tr>\n                        <td>Title</td><td>Year</td><td className=\"thin-col\">Fav</td><td className=\"thin-col\">View</td>\n\n                </tr>\n                </thead>\n                <tbody>\n                    { props.plays.map(p => {\n                        return (\n                        <tr>\n                            <td>{p.title}</td>\n                            <td className=\"thin-col\">{p.likelyDate}</td>\n                            {props.favFuncs.isFav(p) && \n                                <td className=\"thin-col\" onClick={e => props.favFuncs.removeFromFavs(p)}>&#128420;</td>\n                            }\n                            {!props.favFuncs.isFav(p) &&\n                                <td className=\"thin-col\" onClick={e => props.favFuncs.addToFavs(p)}>&#9825;</td>\n                            }\n                            <td className=\"thin-col\">View</td>\n                        </tr>)} ) }\n                </tbody>\n            </table>\n            {props.plays.length === 0 &&\n                        <p>No matches found!</p>\n                    }\n        </div>\n    );\n}\n\nexport default PlayList;","import Header from \"./Header\";\nimport FavoritesList from \"./FavoritesList\"\nimport Filters from \"./Filters\"\nimport PlayList from \"./PlayList\"\n\nimport \"./PlayBrowser.css\"\n\nconst PlayBrowser = (props) => {\n    return (\n        <div id=\"play-browser\">\n            <Header/>\n            <FavoritesList getFavFunctions={props.getFavFunctions}/>\n            <Filters title={props.title} filterPlays={props.filterPlays} clearFilter={props.clearFilter}/>\n            <PlayList favFuncs={props.getFavFunctions()} plays={props.plays}/>\n        </div>\n    );\n}\n\nexport default PlayBrowser;","import { Link } from 'react-router-dom';\nimport FilterInput from './FilterInput';\nimport \"./Home.css\"\n\n\nconst Home = (props) => {\n\n    return (\n        <div id=\"fill\">\n            <div id=\"home-box\">\n                <h2>Play Browser</h2>\n                {props.loading && // https://reactjs.org/docs/conditional-rendering.html\n                    <img src=\"spinner.gif\" alt=\"loading\"/>\n                }\n                {!props.loading &&\n                    <form>\n                        <label>Title</label>\n                        <FilterInput title={props.title} type=\"title\" filterPlays={props.filterPlays}/>\n                        <Link to=\"/comp4513-a1/browse\" className=\"link-btn\">Search Plays</Link>\n                        <Link to=\"/comp4513-a1/browse\" className=\"link-btn\" onClick={props.clearFilter}>View All</Link>\n                    </form>\n                }\n            </div>\n        </div>\n        );\n}\n\nexport default Home;","import { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport PlayBrowser from './components/PlayBrowser.js';\nimport Home from './components/Home.js';\n\nimport './App.css';\nimport React from 'react';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      plays: [], \n      loading: true, \n      favs: [], \n      filtered_plays: [],\n      title_filter: null,\n      date_start_filter: null,\n      date_end_filter: null,\n      genre_filter: null\n    };\n\n    this.filterPlays=this.filterPlays.bind(this);\n    this.filterAll=this.filterAll.bind(this);\n    this.clearFilter=this.clearFilter.bind(this);\n\n    this.addToFavs=this.addToFavs.bind(this);\n    this.getFavList=this.getFavList.bind(this);\n    this.isFav=this.isFav.bind(this);\n    this.removeFromFavs=this.removeFromFavs.bind(this);\n    this.getFavFunctions=this.getFavFunctions.bind(this);\n  }\n\n  // PLAY LIST & FILTER FUNCTIONS\n\n  filterPlays(key, value) {\n\n    let new_filtered_plays = [...this.state.plays];\n\n    if (key === \"title\") {\n      this.setState({title_filter: value})\n      new_filtered_plays = new_filtered_plays.filter(p => p.title.toUpperCase().includes(value.toUpperCase()));\n      new_filtered_plays = this.filterAll(\"title\", new_filtered_plays);\n    }\n\n    if (key === \"start\" && Number(value)) {\n      this.setState({date_start_filter: Number(value)})\n      \n      new_filtered_plays = new_filtered_plays.filter(p => p.likelyDate >= Number(value));\n      new_filtered_plays = this.filterAll(\"start\", new_filtered_plays);\n    }\n\n    if (key === \"end\" && Number(value)) {\n      this.setState({date_end_filter: Number(value)})\n      \n      new_filtered_plays = new_filtered_plays.filter(p => p.likelyDate <= Number(value));\n      new_filtered_plays = this.filterAll(\"end\", new_filtered_plays);\n    }\n\n    if (key === \"genre\") {\n      this.setState({genre_filter: value})\n      new_filtered_plays = new_filtered_plays.filter(p => p.genre.toUpperCase().includes(value.toUpperCase()));\n      new_filtered_plays = this.filterAll(\"genre\", new_filtered_plays);\n    }\n    \n    this.setState({filtered_plays: new_filtered_plays})\n  }\n\n  // filters all according to the state, except for the excluded key\n  // this gets around a bug where filtering everything at once based on state would\n  // make the filter lag behind by one step...\n  filterAll(exclude, plays_init) {\n    let new_plays = [...plays_init]\n\n\tlet verify = (key, filter_value, conditional) => exclude !== key && filter_value && conditional;\n\n    if (verify(\"title\", this.state.title_filter, (this.state.title_filter !== \"\"))) {\n      new_plays = new_plays.filter(p => p.title.toUpperCase().includes(this.state.title_filter.toUpperCase()));\n    }\n\n    if (verify(\"start\", this.state.date_start_filter, Number(this.state.date_start_filter))) {\n      new_plays = new_plays.filter(p => p.likelyDate >= this.state.date_start_filter);\n    }\n\n    if (verify(\"end\", this.state.date_end_filter, Number(this.state.date_end_filter))) {\n      new_plays = new_plays.filter(p => p.likelyDate <= this.state.date_end_filter);\n    }\n\n    if (verify(\"genre\", this.state.genre_filter, (this.state.genre_filter !== \"\"))) {\n      new_plays = new_plays.filter(p => p.genre.toUpperCase().includes(this.state.genre_filter.toUpperCase()));\n    }\n\n    return new_plays;\n  }\n\n  clearFilter() {\n    let new_filtered_plays = [...this.state.plays];\n\n    this.setState({\n      filtered_plays: new_filtered_plays,\n      title_filter: null,\n      date_start_filter: null,\n      date_end_filter: null,\n      genre_filter: null});\n  }\n\n  // FAVOURITES FUNCTIONS\n  getFavList() {\n    return this.state.favs;\n  }\n\n  isFav(play) {\n    return this.state.favs.includes(play);\n  }\n  \n  addToFavs(play) {\n      if (!this.isFav(play)) {\n      let new_favs = [...this.state.favs];\n      new_favs.push(play); \n      this.setState({favs: new_favs});\n    }\n  }\n\n  removeFromFavs(play) {\n    if (this.isFav(play)) {\n      let new_favs = [...this.state.favs];\n      new_favs = new_favs.filter(p => p.id !== play.id); \n      this.setState({favs: new_favs});\n    }\n  }\n\n  getFavFunctions() {\n    return { \n      addToFavs: this.addToFavs, \n      getFavList: this.getFavList, \n      isFav: this.isFav,\n      removeFromFavs: this.removeFromFavs }\n  }\n\n  async componentDidMount() {\n    try {\n      let data = localStorage.getItem(\"shakespeare_data\");\n      if (data) {\n        data = JSON.parse(data);\n      }\n      else {\n        const response = await fetch(\"https://www.randyconnolly.com//funwebdev/3rd/api/shakespeare/list.php\");\n        data = await response.json();\n        data.sort((a, b) => b.title - a.title);\n        localStorage.setItem(\"shakespeare_data\", JSON.stringify(data));\n      }\n      this.setState({plays: data});\n      let new_filtered_plays = [...data];\n      this.setState({filtered_plays: new_filtered_plays})\n      this.setState({loading: false});\n    }\n    catch {\n      console.error(\"Oh God\");\n    }\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/comp4513-a1\" element={\n            <Home loading={this.state.loading} \n              filterPlays={this.filterPlays} \n              clearFilter={this.clearFilter} \n              title={this.state.title_filter}/>}/>\n          <Route path=\"/comp4513-a1/browse\" element={\n            <PlayBrowser plays={this.state.filtered_plays} \n              getFavFunctions={this.getFavFunctions} \n              filterPlays={this.filterPlays} \n              clearFilter={this.clearFilter} \n              title={this.state.title_filter}/>}/>\n        </Routes>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}